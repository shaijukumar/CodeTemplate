
Function CreateFile(TemplatePath As String, FilePath As String, CSFieldList As String, CSValidationList As String, CSFieldAssignList As String, CSEditFieldAssig As String, Class As String, Object As String) As Boolean


'MsgBox (TemplatePath)
'MsgBox (FilePAth)

'Read template File
Dim strFilename As String: strFilename = TemplatePath
Dim strFileContent As String
Dim iFile As Integer: iFile = FreeFile
Open strFilename For Input As #iFile
fileContent = Input(LOF(iFile), iFile)
Close #iFile


'Update template
fileContent = Replace(fileContent, "##CSFieldList##", CSFieldList)
fileContent = Replace(fileContent, "##Class##", Class)
fileContent = Replace(fileContent, "##Object##", Object)
fileContent = Replace(fileContent, "##CSValidation##", CSValidationList)
fileContent = Replace(fileContent, "##CSFieldAssign##", CSFieldAssignList)
fileContent = Replace(fileContent, "##CSEditFieldAssign##", CSEditFieldAssig)
'Write to application file
Open FilePath For Output As #1
Print #1, fileContent
Close #1

CreateFile = True


End Function


Sub file()

FieldCol = 2
FieldCodeCol = 4
FieldRqurdCol = 5

Value1Col = 9
Value2Col = 10


'Constants
Dim Class As String: Class = Cells(3, Value1Col)
Dim Object As String: Object = Cells(3, Value2Col)

Let TemplatePath = Cells(4, Value1Col)
Let appPath = Cells(4, Value2Col)


'Application Folder
On Error Resume Next
MkDir appPath
On Error GoTo 0

'API Folder
On Error Resume Next
MkDir appPath & "API"
On Error GoTo 0

'Model Folder
On Error Resume Next
MkDir appPath & "API\" & "Model"
On Error GoTo 0

'Features Folder
On Error Resume Next
MkDir appPath & "API\" & "Features"
On Error GoTo 0

'Controllers Folder
On Error Resume Next
MkDir appPath & "API\" & "Controllers"
On Error GoTo 0


'Featur Folder
On Error Resume Next
MkDir appPath & "API\" & "Features\" & Class
On Error GoTo 0


'CSFieldList
Dim CSFieldList As String: CSFieldList = ""
Dim CSValidationList As String: CSValidationList = ""
Dim CSFieldAssignList As String: CSFieldAssignList = ""
Dim CSEditFieldAssig As String: CSEditFieldAssig = ""

Let i = 3
Do While Cells(i, FieldCodeCol) <> ""
    CSFieldList = CSFieldList + Chr$(10) + Cells(i, FieldCodeCol)
    
    If LCase(Cells(i, FieldRqurdCol)) = "yes" Then
        CSValidationList = CSValidationList + "RuleFor(x => x." + Cells(i, FieldCol) + ").NotEmpty();" + Chr$(10)
    End If
    
       
    If LCase(Cells(i, FieldCol)) <> "id" Then
        If CSFieldAssignList <> "" Then
            CSFieldAssignList = CSFieldAssignList + "," + Chr$(10)
        End If
        'DisplayName = request.DisplayName,
        CSFieldAssignList = CSFieldAssignList + Cells(i, FieldCol) + "  = request." + Cells(i, FieldCol)
               
        'catalog.DisplayName = request.DisplayName ?? catalog.DisplayName;
        CSEditFieldAssig = CSEditFieldAssig + Object + "." + Cells(i, FieldCol) + "  = request." + Cells(i, FieldCol) + " ? request." + Cells(i, FieldCol) + " : " + Object + "." + Cells(i, FieldCol) + ";" + Chr$(10)
        
    End If

    i = i + 1
Loop

Let i = 5
Do While Cells(i, Value1Col) <> ""
    d = CreateFile(TemplatePath + Cells(i, Value1Col), appPath & Cells(i, Value2Col), CSFieldList, CSValidationList, CSFieldAssignList, CSEditFieldAssig, Class, Object)
    
    i = i + 1
Loop

MsgBox ("Created")
    
End Sub

